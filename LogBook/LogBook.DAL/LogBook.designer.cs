#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogBook.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Logbook")]
	public partial class LogBookDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_logbook_instrument_master(tbl_logbook_instrument_master instance);
    partial void Updatetbl_logbook_instrument_master(tbl_logbook_instrument_master instance);
    partial void Deletetbl_logbook_instrument_master(tbl_logbook_instrument_master instance);
    partial void Inserttbl_logbook_department_master(tbl_logbook_department_master instance);
    partial void Updatetbl_logbook_department_master(tbl_logbook_department_master instance);
    partial void Deletetbl_logbook_department_master(tbl_logbook_department_master instance);
    partial void Inserttbl_logbook_user_master(tbl_logbook_user_master instance);
    partial void Updatetbl_logbook_user_master(tbl_logbook_user_master instance);
    partial void Deletetbl_logbook_user_master(tbl_logbook_user_master instance);
    partial void Inserttbl_logbook_machine(tbl_logbook_machine instance);
    partial void Updatetbl_logbook_machine(tbl_logbook_machine instance);
    partial void Deletetbl_logbook_machine(tbl_logbook_machine instance);
    partial void Inserttbl_logbook_centrifuge(tbl_logbook_centrifuge instance);
    partial void Updatetbl_logbook_centrifuge(tbl_logbook_centrifuge instance);
    partial void Deletetbl_logbook_centrifuge(tbl_logbook_centrifuge instance);
    #endregion
		
		public LogBookDataContext() : 
				base(global::LogBook.DAL.Properties.Settings.Default.LogbookConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LogBookDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogBookDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogBookDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogBookDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_logbook_instrument_master> tbl_logbook_instrument_masters
		{
			get
			{
				return this.GetTable<tbl_logbook_instrument_master>();
			}
		}
		
		public System.Data.Linq.Table<tbl_logbook_department_master> tbl_logbook_department_masters
		{
			get
			{
				return this.GetTable<tbl_logbook_department_master>();
			}
		}
		
		public System.Data.Linq.Table<tbl_logbook_user_master> tbl_logbook_user_masters
		{
			get
			{
				return this.GetTable<tbl_logbook_user_master>();
			}
		}
		
		public System.Data.Linq.Table<tbl_logbook_machine> tbl_logbook_machines
		{
			get
			{
				return this.GetTable<tbl_logbook_machine>();
			}
		}
		
		public System.Data.Linq.Table<tbl_logbook_centrifuge> tbl_logbook_centrifuges
		{
			get
			{
				return this.GetTable<tbl_logbook_centrifuge>();
			}
		}
	}
	
	[Table(Name="dbo.tbl_logbook_instrument_master")]
	public partial class tbl_logbook_instrument_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _deptid;
		
		private bool _IsActive;
		
		private string _createdby;
		
		private System.DateTime _createddate;
		
		private string _updatedby;
		
		private System.DateTime _updateddate;
		
		private EntitySet<tbl_logbook_machine> _tbl_logbook_machines;
		
		private EntitySet<tbl_logbook_centrifuge> _tbl_logbook_centrifuges;
		
		private EntityRef<tbl_logbook_department_master> _tbl_logbook_department_master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndeptidChanging(int value);
    partial void OndeptidChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OncreatedbyChanging(string value);
    partial void OncreatedbyChanged();
    partial void OncreateddateChanging(System.DateTime value);
    partial void OncreateddateChanged();
    partial void OnupdatedbyChanging(string value);
    partial void OnupdatedbyChanged();
    partial void OnupdateddateChanging(System.DateTime value);
    partial void OnupdateddateChanged();
    #endregion
		
		public tbl_logbook_instrument_master()
		{
			this._tbl_logbook_machines = new EntitySet<tbl_logbook_machine>(new Action<tbl_logbook_machine>(this.attach_tbl_logbook_machines), new Action<tbl_logbook_machine>(this.detach_tbl_logbook_machines));
			this._tbl_logbook_centrifuges = new EntitySet<tbl_logbook_centrifuge>(new Action<tbl_logbook_centrifuge>(this.attach_tbl_logbook_centrifuges), new Action<tbl_logbook_centrifuge>(this.detach_tbl_logbook_centrifuges));
			this._tbl_logbook_department_master = default(EntityRef<tbl_logbook_department_master>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_deptid", DbType="Int NOT NULL")]
		public int deptid
		{
			get
			{
				return this._deptid;
			}
			set
			{
				if ((this._deptid != value))
				{
					if (this._tbl_logbook_department_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeptidChanging(value);
					this.SendPropertyChanging();
					this._deptid = value;
					this.SendPropertyChanged("deptid");
					this.OndeptidChanged();
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[Column(Storage="_createdby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[Column(Storage="_createddate", DbType="Date NOT NULL")]
		public System.DateTime createddate
		{
			get
			{
				return this._createddate;
			}
			set
			{
				if ((this._createddate != value))
				{
					this.OncreateddateChanging(value);
					this.SendPropertyChanging();
					this._createddate = value;
					this.SendPropertyChanged("createddate");
					this.OncreateddateChanged();
				}
			}
		}
		
		[Column(Storage="_updatedby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string updatedby
		{
			get
			{
				return this._updatedby;
			}
			set
			{
				if ((this._updatedby != value))
				{
					this.OnupdatedbyChanging(value);
					this.SendPropertyChanging();
					this._updatedby = value;
					this.SendPropertyChanged("updatedby");
					this.OnupdatedbyChanged();
				}
			}
		}
		
		[Column(Storage="_updateddate", DbType="Date NOT NULL")]
		public System.DateTime updateddate
		{
			get
			{
				return this._updateddate;
			}
			set
			{
				if ((this._updateddate != value))
				{
					this.OnupdateddateChanging(value);
					this.SendPropertyChanging();
					this._updateddate = value;
					this.SendPropertyChanged("updateddate");
					this.OnupdateddateChanged();
				}
			}
		}
		
		[Association(Name="tbl_logbook_instrument_master_tbl_logbook_machine", Storage="_tbl_logbook_machines", ThisKey="id", OtherKey="machine_id")]
		public EntitySet<tbl_logbook_machine> tbl_logbook_machines
		{
			get
			{
				return this._tbl_logbook_machines;
			}
			set
			{
				this._tbl_logbook_machines.Assign(value);
			}
		}
		
		[Association(Name="tbl_logbook_instrument_master_tbl_logbook_centrifuge", Storage="_tbl_logbook_centrifuges", ThisKey="id", OtherKey="machine_id")]
		public EntitySet<tbl_logbook_centrifuge> tbl_logbook_centrifuges
		{
			get
			{
				return this._tbl_logbook_centrifuges;
			}
			set
			{
				this._tbl_logbook_centrifuges.Assign(value);
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_instrument_master", Storage="_tbl_logbook_department_master", ThisKey="deptid", OtherKey="id", IsForeignKey=true)]
		public tbl_logbook_department_master tbl_logbook_department_master
		{
			get
			{
				return this._tbl_logbook_department_master.Entity;
			}
			set
			{
				tbl_logbook_department_master previousValue = this._tbl_logbook_department_master.Entity;
				if (((previousValue != value) 
							|| (this._tbl_logbook_department_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_logbook_department_master.Entity = null;
						previousValue.tbl_logbook_instrument_masters.Remove(this);
					}
					this._tbl_logbook_department_master.Entity = value;
					if ((value != null))
					{
						value.tbl_logbook_instrument_masters.Add(this);
						this._deptid = value.id;
					}
					else
					{
						this._deptid = default(int);
					}
					this.SendPropertyChanged("tbl_logbook_department_master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_logbook_machines(tbl_logbook_machine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_instrument_master = this;
		}
		
		private void detach_tbl_logbook_machines(tbl_logbook_machine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_instrument_master = null;
		}
		
		private void attach_tbl_logbook_centrifuges(tbl_logbook_centrifuge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_instrument_master = this;
		}
		
		private void detach_tbl_logbook_centrifuges(tbl_logbook_centrifuge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_instrument_master = null;
		}
	}
	
	[Table(Name="dbo.tbl_logbook_department_master")]
	public partial class tbl_logbook_department_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private bool _IsActive;
		
		private string _createdby;
		
		private System.DateTime _createddate;
		
		private string _updatedby;
		
		private System.DateTime _updateddate;
		
		private EntitySet<tbl_logbook_instrument_master> _tbl_logbook_instrument_masters;
		
		private EntitySet<tbl_logbook_user_master> _tbl_logbook_user_masters;
		
		private EntitySet<tbl_logbook_machine> _tbl_logbook_machines;
		
		private EntitySet<tbl_logbook_centrifuge> _tbl_logbook_centrifuges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OncreatedbyChanging(string value);
    partial void OncreatedbyChanged();
    partial void OncreateddateChanging(System.DateTime value);
    partial void OncreateddateChanged();
    partial void OnupdatedbyChanging(string value);
    partial void OnupdatedbyChanged();
    partial void OnupdateddateChanging(System.DateTime value);
    partial void OnupdateddateChanged();
    #endregion
		
		public tbl_logbook_department_master()
		{
			this._tbl_logbook_instrument_masters = new EntitySet<tbl_logbook_instrument_master>(new Action<tbl_logbook_instrument_master>(this.attach_tbl_logbook_instrument_masters), new Action<tbl_logbook_instrument_master>(this.detach_tbl_logbook_instrument_masters));
			this._tbl_logbook_user_masters = new EntitySet<tbl_logbook_user_master>(new Action<tbl_logbook_user_master>(this.attach_tbl_logbook_user_masters), new Action<tbl_logbook_user_master>(this.detach_tbl_logbook_user_masters));
			this._tbl_logbook_machines = new EntitySet<tbl_logbook_machine>(new Action<tbl_logbook_machine>(this.attach_tbl_logbook_machines), new Action<tbl_logbook_machine>(this.detach_tbl_logbook_machines));
			this._tbl_logbook_centrifuges = new EntitySet<tbl_logbook_centrifuge>(new Action<tbl_logbook_centrifuge>(this.attach_tbl_logbook_centrifuges), new Action<tbl_logbook_centrifuge>(this.detach_tbl_logbook_centrifuges));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[Column(Storage="_createdby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[Column(Storage="_createddate", DbType="Date NOT NULL")]
		public System.DateTime createddate
		{
			get
			{
				return this._createddate;
			}
			set
			{
				if ((this._createddate != value))
				{
					this.OncreateddateChanging(value);
					this.SendPropertyChanging();
					this._createddate = value;
					this.SendPropertyChanged("createddate");
					this.OncreateddateChanged();
				}
			}
		}
		
		[Column(Storage="_updatedby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string updatedby
		{
			get
			{
				return this._updatedby;
			}
			set
			{
				if ((this._updatedby != value))
				{
					this.OnupdatedbyChanging(value);
					this.SendPropertyChanging();
					this._updatedby = value;
					this.SendPropertyChanged("updatedby");
					this.OnupdatedbyChanged();
				}
			}
		}
		
		[Column(Storage="_updateddate", DbType="Date NOT NULL")]
		public System.DateTime updateddate
		{
			get
			{
				return this._updateddate;
			}
			set
			{
				if ((this._updateddate != value))
				{
					this.OnupdateddateChanging(value);
					this.SendPropertyChanging();
					this._updateddate = value;
					this.SendPropertyChanged("updateddate");
					this.OnupdateddateChanged();
				}
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_instrument_master", Storage="_tbl_logbook_instrument_masters", ThisKey="id", OtherKey="deptid")]
		public EntitySet<tbl_logbook_instrument_master> tbl_logbook_instrument_masters
		{
			get
			{
				return this._tbl_logbook_instrument_masters;
			}
			set
			{
				this._tbl_logbook_instrument_masters.Assign(value);
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_user_master", Storage="_tbl_logbook_user_masters", ThisKey="id", OtherKey="deptid")]
		public EntitySet<tbl_logbook_user_master> tbl_logbook_user_masters
		{
			get
			{
				return this._tbl_logbook_user_masters;
			}
			set
			{
				this._tbl_logbook_user_masters.Assign(value);
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_machine", Storage="_tbl_logbook_machines", ThisKey="id", OtherKey="department_id")]
		public EntitySet<tbl_logbook_machine> tbl_logbook_machines
		{
			get
			{
				return this._tbl_logbook_machines;
			}
			set
			{
				this._tbl_logbook_machines.Assign(value);
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_centrifuge", Storage="_tbl_logbook_centrifuges", ThisKey="id", OtherKey="department_id")]
		public EntitySet<tbl_logbook_centrifuge> tbl_logbook_centrifuges
		{
			get
			{
				return this._tbl_logbook_centrifuges;
			}
			set
			{
				this._tbl_logbook_centrifuges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_logbook_instrument_masters(tbl_logbook_instrument_master entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = this;
		}
		
		private void detach_tbl_logbook_instrument_masters(tbl_logbook_instrument_master entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = null;
		}
		
		private void attach_tbl_logbook_user_masters(tbl_logbook_user_master entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = this;
		}
		
		private void detach_tbl_logbook_user_masters(tbl_logbook_user_master entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = null;
		}
		
		private void attach_tbl_logbook_machines(tbl_logbook_machine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = this;
		}
		
		private void detach_tbl_logbook_machines(tbl_logbook_machine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = null;
		}
		
		private void attach_tbl_logbook_centrifuges(tbl_logbook_centrifuge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = this;
		}
		
		private void detach_tbl_logbook_centrifuges(tbl_logbook_centrifuge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_logbook_department_master = null;
		}
	}
	
	[Table(Name="dbo.tbl_logbook_user_master")]
	public partial class tbl_logbook_user_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private int _deptid;
		
		private int _usertype;
		
		private string _createdby;
		
		private System.DateTime _createddate;
		
		private string _updatedby;
		
		private System.DateTime _updateddate;
		
		private bool _IsActive;
		
		private EntityRef<tbl_logbook_department_master> _tbl_logbook_department_master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OndeptidChanging(int value);
    partial void OndeptidChanged();
    partial void OnusertypeChanging(int value);
    partial void OnusertypeChanged();
    partial void OncreatedbyChanging(string value);
    partial void OncreatedbyChanged();
    partial void OncreateddateChanging(System.DateTime value);
    partial void OncreateddateChanged();
    partial void OnupdatedbyChanging(string value);
    partial void OnupdatedbyChanged();
    partial void OnupdateddateChanging(System.DateTime value);
    partial void OnupdateddateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tbl_logbook_user_master()
		{
			this._tbl_logbook_department_master = default(EntityRef<tbl_logbook_department_master>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_deptid", DbType="Int NOT NULL")]
		public int deptid
		{
			get
			{
				return this._deptid;
			}
			set
			{
				if ((this._deptid != value))
				{
					if (this._tbl_logbook_department_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeptidChanging(value);
					this.SendPropertyChanging();
					this._deptid = value;
					this.SendPropertyChanged("deptid");
					this.OndeptidChanged();
				}
			}
		}
		
		[Column(Storage="_usertype", DbType="Int NOT NULL")]
		public int usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[Column(Storage="_createdby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[Column(Storage="_createddate", DbType="Date NOT NULL")]
		public System.DateTime createddate
		{
			get
			{
				return this._createddate;
			}
			set
			{
				if ((this._createddate != value))
				{
					this.OncreateddateChanging(value);
					this.SendPropertyChanging();
					this._createddate = value;
					this.SendPropertyChanged("createddate");
					this.OncreateddateChanged();
				}
			}
		}
		
		[Column(Storage="_updatedby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string updatedby
		{
			get
			{
				return this._updatedby;
			}
			set
			{
				if ((this._updatedby != value))
				{
					this.OnupdatedbyChanging(value);
					this.SendPropertyChanging();
					this._updatedby = value;
					this.SendPropertyChanged("updatedby");
					this.OnupdatedbyChanged();
				}
			}
		}
		
		[Column(Storage="_updateddate", DbType="Date NOT NULL")]
		public System.DateTime updateddate
		{
			get
			{
				return this._updateddate;
			}
			set
			{
				if ((this._updateddate != value))
				{
					this.OnupdateddateChanging(value);
					this.SendPropertyChanging();
					this._updateddate = value;
					this.SendPropertyChanged("updateddate");
					this.OnupdateddateChanged();
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_user_master", Storage="_tbl_logbook_department_master", ThisKey="deptid", OtherKey="id", IsForeignKey=true)]
		public tbl_logbook_department_master tbl_logbook_department_master
		{
			get
			{
				return this._tbl_logbook_department_master.Entity;
			}
			set
			{
				tbl_logbook_department_master previousValue = this._tbl_logbook_department_master.Entity;
				if (((previousValue != value) 
							|| (this._tbl_logbook_department_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_logbook_department_master.Entity = null;
						previousValue.tbl_logbook_user_masters.Remove(this);
					}
					this._tbl_logbook_department_master.Entity = value;
					if ((value != null))
					{
						value.tbl_logbook_user_masters.Add(this);
						this._deptid = value.id;
					}
					else
					{
						this._deptid = default(int);
					}
					this.SendPropertyChanged("tbl_logbook_department_master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_logbook_machine")]
	public partial class tbl_logbook_machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _department_id;
		
		private System.Nullable<int> _machine_id;
		
		private System.Nullable<System.DateTime> _testdate;
		
		private string _analysis_starttime;
		
		private string _analysis_endtime;
		
		private string _sid;
		
		private string _analysisby;
		
		private string _verified_by;
		
		private string _remarks;
		
		private System.Nullable<System.DateTime> _addeddate;
		
		private System.Nullable<System.DateTime> _verifieddate;
		
		private EntityRef<tbl_logbook_department_master> _tbl_logbook_department_master;
		
		private EntityRef<tbl_logbook_instrument_master> _tbl_logbook_instrument_master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondepartment_idChanging(System.Nullable<int> value);
    partial void Ondepartment_idChanged();
    partial void Onmachine_idChanging(System.Nullable<int> value);
    partial void Onmachine_idChanged();
    partial void OntestdateChanging(System.Nullable<System.DateTime> value);
    partial void OntestdateChanged();
    partial void Onanalysis_starttimeChanging(string value);
    partial void Onanalysis_starttimeChanged();
    partial void Onanalysis_endtimeChanging(string value);
    partial void Onanalysis_endtimeChanged();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    partial void OnanalysisbyChanging(string value);
    partial void OnanalysisbyChanged();
    partial void Onverified_byChanging(string value);
    partial void Onverified_byChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void OnaddeddateChanging(System.Nullable<System.DateTime> value);
    partial void OnaddeddateChanged();
    partial void OnverifieddateChanging(System.Nullable<System.DateTime> value);
    partial void OnverifieddateChanged();
    #endregion
		
		public tbl_logbook_machine()
		{
			this._tbl_logbook_department_master = default(EntityRef<tbl_logbook_department_master>);
			this._tbl_logbook_instrument_master = default(EntityRef<tbl_logbook_instrument_master>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._tbl_logbook_department_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[Column(Storage="_machine_id", DbType="Int")]
		public System.Nullable<int> machine_id
		{
			get
			{
				return this._machine_id;
			}
			set
			{
				if ((this._machine_id != value))
				{
					if (this._tbl_logbook_instrument_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmachine_idChanging(value);
					this.SendPropertyChanging();
					this._machine_id = value;
					this.SendPropertyChanged("machine_id");
					this.Onmachine_idChanged();
				}
			}
		}
		
		[Column(Storage="_testdate", DbType="Date")]
		public System.Nullable<System.DateTime> testdate
		{
			get
			{
				return this._testdate;
			}
			set
			{
				if ((this._testdate != value))
				{
					this.OntestdateChanging(value);
					this.SendPropertyChanging();
					this._testdate = value;
					this.SendPropertyChanged("testdate");
					this.OntestdateChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_starttime", DbType="NVarChar(MAX)")]
		public string analysis_starttime
		{
			get
			{
				return this._analysis_starttime;
			}
			set
			{
				if ((this._analysis_starttime != value))
				{
					this.Onanalysis_starttimeChanging(value);
					this.SendPropertyChanging();
					this._analysis_starttime = value;
					this.SendPropertyChanged("analysis_starttime");
					this.Onanalysis_starttimeChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_endtime", DbType="VarChar(50)")]
		public string analysis_endtime
		{
			get
			{
				return this._analysis_endtime;
			}
			set
			{
				if ((this._analysis_endtime != value))
				{
					this.Onanalysis_endtimeChanging(value);
					this.SendPropertyChanging();
					this._analysis_endtime = value;
					this.SendPropertyChanged("analysis_endtime");
					this.Onanalysis_endtimeChanged();
				}
			}
		}
		
		[Column(Storage="_sid", DbType="NVarChar(MAX)")]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[Column(Storage="_analysisby", DbType="VarChar(50)")]
		public string analysisby
		{
			get
			{
				return this._analysisby;
			}
			set
			{
				if ((this._analysisby != value))
				{
					this.OnanalysisbyChanging(value);
					this.SendPropertyChanging();
					this._analysisby = value;
					this.SendPropertyChanged("analysisby");
					this.OnanalysisbyChanged();
				}
			}
		}
		
		[Column(Storage="_verified_by", DbType="VarChar(50)")]
		public string verified_by
		{
			get
			{
				return this._verified_by;
			}
			set
			{
				if ((this._verified_by != value))
				{
					this.Onverified_byChanging(value);
					this.SendPropertyChanging();
					this._verified_by = value;
					this.SendPropertyChanged("verified_by");
					this.Onverified_byChanged();
				}
			}
		}
		
		[Column(Storage="_remarks", DbType="NVarChar(500)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[Column(Storage="_addeddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> addeddate
		{
			get
			{
				return this._addeddate;
			}
			set
			{
				if ((this._addeddate != value))
				{
					this.OnaddeddateChanging(value);
					this.SendPropertyChanging();
					this._addeddate = value;
					this.SendPropertyChanged("addeddate");
					this.OnaddeddateChanged();
				}
			}
		}
		
		[Column(Storage="_verifieddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> verifieddate
		{
			get
			{
				return this._verifieddate;
			}
			set
			{
				if ((this._verifieddate != value))
				{
					this.OnverifieddateChanging(value);
					this.SendPropertyChanging();
					this._verifieddate = value;
					this.SendPropertyChanged("verifieddate");
					this.OnverifieddateChanged();
				}
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_machine", Storage="_tbl_logbook_department_master", ThisKey="department_id", OtherKey="id", IsForeignKey=true)]
		public tbl_logbook_department_master tbl_logbook_department_master
		{
			get
			{
				return this._tbl_logbook_department_master.Entity;
			}
			set
			{
				tbl_logbook_department_master previousValue = this._tbl_logbook_department_master.Entity;
				if (((previousValue != value) 
							|| (this._tbl_logbook_department_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_logbook_department_master.Entity = null;
						previousValue.tbl_logbook_machines.Remove(this);
					}
					this._tbl_logbook_department_master.Entity = value;
					if ((value != null))
					{
						value.tbl_logbook_machines.Add(this);
						this._department_id = value.id;
					}
					else
					{
						this._department_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_logbook_department_master");
				}
			}
		}
		
		[Association(Name="tbl_logbook_instrument_master_tbl_logbook_machine", Storage="_tbl_logbook_instrument_master", ThisKey="machine_id", OtherKey="id", IsForeignKey=true)]
		public tbl_logbook_instrument_master tbl_logbook_instrument_master
		{
			get
			{
				return this._tbl_logbook_instrument_master.Entity;
			}
			set
			{
				tbl_logbook_instrument_master previousValue = this._tbl_logbook_instrument_master.Entity;
				if (((previousValue != value) 
							|| (this._tbl_logbook_instrument_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_logbook_instrument_master.Entity = null;
						previousValue.tbl_logbook_machines.Remove(this);
					}
					this._tbl_logbook_instrument_master.Entity = value;
					if ((value != null))
					{
						value.tbl_logbook_machines.Add(this);
						this._machine_id = value.id;
					}
					else
					{
						this._machine_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_logbook_instrument_master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_logbook_centrifuge")]
	public partial class tbl_logbook_centrifuge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _department_id;
		
		private System.Nullable<int> _machine_id;
		
		private System.Nullable<System.DateTime> _testdate;
		
		private string _analysis_starttime;
		
		private string _analysis_endtime;
		
		private string _sid;
		
		private string _rpm;
		
		private string _sampletype;
		
		private string _analysisby;
		
		private string _verified_by;
		
		private string _remarks;
		
		private System.Nullable<System.DateTime> _addeddate;
		
		private System.Nullable<System.DateTime> _verifieddate;
		
		private EntityRef<tbl_logbook_department_master> _tbl_logbook_department_master;
		
		private EntityRef<tbl_logbook_instrument_master> _tbl_logbook_instrument_master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondepartment_idChanging(System.Nullable<int> value);
    partial void Ondepartment_idChanged();
    partial void Onmachine_idChanging(System.Nullable<int> value);
    partial void Onmachine_idChanged();
    partial void OntestdateChanging(System.Nullable<System.DateTime> value);
    partial void OntestdateChanged();
    partial void Onanalysis_starttimeChanging(string value);
    partial void Onanalysis_starttimeChanged();
    partial void Onanalysis_endtimeChanging(string value);
    partial void Onanalysis_endtimeChanged();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    partial void OnrpmChanging(string value);
    partial void OnrpmChanged();
    partial void OnsampletypeChanging(string value);
    partial void OnsampletypeChanged();
    partial void OnanalysisbyChanging(string value);
    partial void OnanalysisbyChanged();
    partial void Onverified_byChanging(string value);
    partial void Onverified_byChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void OnaddeddateChanging(System.Nullable<System.DateTime> value);
    partial void OnaddeddateChanged();
    partial void OnverifieddateChanging(System.Nullable<System.DateTime> value);
    partial void OnverifieddateChanged();
    #endregion
		
		public tbl_logbook_centrifuge()
		{
			this._tbl_logbook_department_master = default(EntityRef<tbl_logbook_department_master>);
			this._tbl_logbook_instrument_master = default(EntityRef<tbl_logbook_instrument_master>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._tbl_logbook_department_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[Column(Storage="_machine_id", DbType="Int")]
		public System.Nullable<int> machine_id
		{
			get
			{
				return this._machine_id;
			}
			set
			{
				if ((this._machine_id != value))
				{
					if (this._tbl_logbook_instrument_master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmachine_idChanging(value);
					this.SendPropertyChanging();
					this._machine_id = value;
					this.SendPropertyChanged("machine_id");
					this.Onmachine_idChanged();
				}
			}
		}
		
		[Column(Storage="_testdate", DbType="Date")]
		public System.Nullable<System.DateTime> testdate
		{
			get
			{
				return this._testdate;
			}
			set
			{
				if ((this._testdate != value))
				{
					this.OntestdateChanging(value);
					this.SendPropertyChanging();
					this._testdate = value;
					this.SendPropertyChanged("testdate");
					this.OntestdateChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_starttime", DbType="VarChar(50)")]
		public string analysis_starttime
		{
			get
			{
				return this._analysis_starttime;
			}
			set
			{
				if ((this._analysis_starttime != value))
				{
					this.Onanalysis_starttimeChanging(value);
					this.SendPropertyChanging();
					this._analysis_starttime = value;
					this.SendPropertyChanged("analysis_starttime");
					this.Onanalysis_starttimeChanged();
				}
			}
		}
		
		[Column(Storage="_analysis_endtime", DbType="VarChar(50)")]
		public string analysis_endtime
		{
			get
			{
				return this._analysis_endtime;
			}
			set
			{
				if ((this._analysis_endtime != value))
				{
					this.Onanalysis_endtimeChanging(value);
					this.SendPropertyChanging();
					this._analysis_endtime = value;
					this.SendPropertyChanged("analysis_endtime");
					this.Onanalysis_endtimeChanged();
				}
			}
		}
		
		[Column(Storage="_sid", DbType="NVarChar(MAX)")]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[Column(Storage="_rpm", DbType="VarChar(50)")]
		public string rpm
		{
			get
			{
				return this._rpm;
			}
			set
			{
				if ((this._rpm != value))
				{
					this.OnrpmChanging(value);
					this.SendPropertyChanging();
					this._rpm = value;
					this.SendPropertyChanged("rpm");
					this.OnrpmChanged();
				}
			}
		}
		
		[Column(Storage="_sampletype", DbType="VarChar(50)")]
		public string sampletype
		{
			get
			{
				return this._sampletype;
			}
			set
			{
				if ((this._sampletype != value))
				{
					this.OnsampletypeChanging(value);
					this.SendPropertyChanging();
					this._sampletype = value;
					this.SendPropertyChanged("sampletype");
					this.OnsampletypeChanged();
				}
			}
		}
		
		[Column(Storage="_analysisby", DbType="VarChar(50)")]
		public string analysisby
		{
			get
			{
				return this._analysisby;
			}
			set
			{
				if ((this._analysisby != value))
				{
					this.OnanalysisbyChanging(value);
					this.SendPropertyChanging();
					this._analysisby = value;
					this.SendPropertyChanged("analysisby");
					this.OnanalysisbyChanged();
				}
			}
		}
		
		[Column(Storage="_verified_by", DbType="VarChar(50)")]
		public string verified_by
		{
			get
			{
				return this._verified_by;
			}
			set
			{
				if ((this._verified_by != value))
				{
					this.Onverified_byChanging(value);
					this.SendPropertyChanging();
					this._verified_by = value;
					this.SendPropertyChanged("verified_by");
					this.Onverified_byChanged();
				}
			}
		}
		
		[Column(Storage="_remarks", DbType="NVarChar(MAX)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[Column(Storage="_addeddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> addeddate
		{
			get
			{
				return this._addeddate;
			}
			set
			{
				if ((this._addeddate != value))
				{
					this.OnaddeddateChanging(value);
					this.SendPropertyChanging();
					this._addeddate = value;
					this.SendPropertyChanged("addeddate");
					this.OnaddeddateChanged();
				}
			}
		}
		
		[Column(Storage="_verifieddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> verifieddate
		{
			get
			{
				return this._verifieddate;
			}
			set
			{
				if ((this._verifieddate != value))
				{
					this.OnverifieddateChanging(value);
					this.SendPropertyChanging();
					this._verifieddate = value;
					this.SendPropertyChanged("verifieddate");
					this.OnverifieddateChanged();
				}
			}
		}
		
		[Association(Name="tbl_logbook_department_master_tbl_logbook_centrifuge", Storage="_tbl_logbook_department_master", ThisKey="department_id", OtherKey="id", IsForeignKey=true)]
		public tbl_logbook_department_master tbl_logbook_department_master
		{
			get
			{
				return this._tbl_logbook_department_master.Entity;
			}
			set
			{
				tbl_logbook_department_master previousValue = this._tbl_logbook_department_master.Entity;
				if (((previousValue != value) 
							|| (this._tbl_logbook_department_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_logbook_department_master.Entity = null;
						previousValue.tbl_logbook_centrifuges.Remove(this);
					}
					this._tbl_logbook_department_master.Entity = value;
					if ((value != null))
					{
						value.tbl_logbook_centrifuges.Add(this);
						this._department_id = value.id;
					}
					else
					{
						this._department_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_logbook_department_master");
				}
			}
		}
		
		[Association(Name="tbl_logbook_instrument_master_tbl_logbook_centrifuge", Storage="_tbl_logbook_instrument_master", ThisKey="machine_id", OtherKey="id", IsForeignKey=true)]
		public tbl_logbook_instrument_master tbl_logbook_instrument_master
		{
			get
			{
				return this._tbl_logbook_instrument_master.Entity;
			}
			set
			{
				tbl_logbook_instrument_master previousValue = this._tbl_logbook_instrument_master.Entity;
				if (((previousValue != value) 
							|| (this._tbl_logbook_instrument_master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_logbook_instrument_master.Entity = null;
						previousValue.tbl_logbook_centrifuges.Remove(this);
					}
					this._tbl_logbook_instrument_master.Entity = value;
					if ((value != null))
					{
						value.tbl_logbook_centrifuges.Add(this);
						this._machine_id = value.id;
					}
					else
					{
						this._machine_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_logbook_instrument_master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
